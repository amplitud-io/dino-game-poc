(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./character.js":
/*!**********************!*\
  !*** ./character.js ***!
  \**********************/
/*! exports provided: CharacterMeta, Character, AllocatorCharacterArray, CharacterAllocator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterMeta\", function() { return CharacterMeta; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Character\", function() { return Character; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AllocatorCharacterArray\", function() { return AllocatorCharacterArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterAllocator\", function() { return CharacterAllocator; });\nconst { applyVelocityToPosition, Velocity } = __webpack_require__(/*! ./physics */ \"./physics.js\");\n\nclass CharacterMeta {\n    constructor(movements_array, movement_delay, position, velocity) {\n        this._movements_array = movements_array;\n        this._position = position;\n        this._velocity = velocity;\n        this._movement_delay = movement_delay;\n    }\n\n    clone() {\n        return new CharacterMeta(\n            [...this._movements_array],\n            this._movement_delay,\n            this._position.clone(),\n            this._velocity.clone()\n        );\n    }\n}\n\nclass Character {\n    constructor(character_meta) {\n        this._character_meta = character_meta;\n        this._tick_counter = 0;\n        this._movement_delay_counter = 0;\n    }\n\n    tick() {\n        this._movement_delay_counter++;\n        if (this._movement_delay_counter > this._character_meta._movement_delay) {\n            this._movement_delay_counter = 0;\n            this._tick_counter += 1;\n            this.set_position(applyVelocityToPosition(this._character_meta._position, this._character_meta._velocity));\n        }\n    }\n\n    get_layout() {\n        return this._character_meta._movements_array[this._tick_counter % this._character_meta._movements_array.length];\n    }\n\n    get_position() {\n        return this._character_meta._position;\n    }\n\n    set_position(new_position) {\n        this._character_meta._position = new_position;\n    }\n\n    get_velocity() {\n        return this._character_meta._velocity;\n    }\n}\n\nclass AllocatorCharacterArray {\n    constructor() {\n        this._character_array = [];\n    }\n\n    add_character(character_meta, probability) {\n        this._character_array.push([character_meta, probability]);\n        return this;\n    }\n}\n\nclass CharacterAllocator {\n    constructor(allocator_character_array, min_gap, gap_random_max) {\n        this._allocator_character_array = allocator_character_array;\n        this._min_gap = min_gap;\n        this._gap_random_max = gap_random_max;\n        this._pending_gap = 0;\n    }\n\n    tick() {\n        this._pending_gap -= 1;\n    }\n\n    get_character() {\n        if (this._pending_gap > 0) {\n            return false;\n        }\n\n        const RANDOM = Math.random();\n        for (let i = 0; i < this._allocator_character_array._character_array.length; i++) {\n            if (RANDOM >= this._allocator_character_array._character_array[i][1]) {\n                const RANDOM_CHARACTER = new Character(this._allocator_character_array._character_array[i][0].clone());\n                this._pending_gap = this._min_gap + Math.ceil(Math.random() * this._gap_random_max);\n                return RANDOM_CHARACTER;\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./character.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character */ \"./character.js\");\n/* harmony import */ var _layouts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layouts */ \"./layouts.js\");\n/* harmony import */ var _layouts__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_layouts__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./physics */ \"./physics.js\");\n\n\n\n\nconst canvas = document.getElementById(\"board\");\nconst canvas_ctx = canvas.getContext('2d');\n\n\nconst abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"name\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"dataType\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct Attribute[]\",\n                \"name\": \"_attributes\",\n                \"type\": \"tuple[]\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_imagesBaseURI\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string[]\",\n                \"name\": \"_strings\",\n                \"type\": \"string[]\"\n            },\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"_defaultValues\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"approved\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"attrMap\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"attributeList\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"name\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"dataType\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"defaultValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"imagesBaseURI\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"stringList\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"tokenDataOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"tokenMap\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"tokenURI\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"id\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"value\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"internalType\": \"struct AttributeUpdate[]\",\n                \"name\": \"_updates\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"updateAttributes\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\n\nlet web3;\nlet wallet;\nlet contract;\nlet metadata;\nlet upgrading = false;\n\nconst CELL_SIZE = 2;\nconst ROWS = 300;\nlet COLUMNS = 1000;\nconst FLOOR_VELOCITY = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -7);\nlet CACTUS_MIN_GAP = 20;\n\nif (screen.width < COLUMNS) {\n    COLUMNS = screen.width;\n    FLOOR_VELOCITY.add(new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, 2));\n    CACTUS_MIN_GAP = 50;\n}\n\nconst DINO_INITIAL_TRUST = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](-11, 0);\nconst ENVIRONMENT_GRAVITY = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](-0.6, 0);\nconst DINO_FLOOR_INITIAL_POSITION = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](200, 10);\nlet dino_current_trust = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, 0);\nlet dino_ready_to_jump = true;\nlet game_over = null;\nlet is_first_time = true;\nlet game_score = null;\nlet game_score_step = 0;\nlet game_hi_score = null;\nlet game_level = null\nlet game_speed = null;\nlet step_velocity = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -0.1);\nlet cumulative_velocity = null;\nlet current_theme = null;\nlet level_colors = {\n    1: '#535353',\n    2: '#f1c232',\n    3: '#FF7600',\n    4: '#f44336',\n    5: '#6a040f',\n}\n\nlet harmless_characters_pool = null;\nlet harmfull_characters_pool = null;\n\nlet harmless_character_allocator = [\n    new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterAllocator\"](\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"AllocatorCharacterArray\"]()\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"stone_layout\"].large], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](240, COLUMNS), FLOOR_VELOCITY), 0.9)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"stone_layout\"].medium], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](243, COLUMNS), FLOOR_VELOCITY), 0.75)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"stone_layout\"].small], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](241, COLUMNS), FLOOR_VELOCITY), 0.6)\n        , 2, 0\n    ),\n    new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterAllocator\"](\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"AllocatorCharacterArray\"]()\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cloud_layout\"]], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](100, COLUMNS), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -1)), 0.9)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cloud_layout\"]], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](135, COLUMNS), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -1)), 0.85)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cloud_layout\"]], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](150, COLUMNS), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -1)), 0.8)\n        , 350, 300\n    ),\n    new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterAllocator\"](\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"AllocatorCharacterArray\"]()\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"star_layout\"].small_s1], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](90, COLUMNS), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -0.3)), 0.9)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"star_layout\"].small_s2], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](125, COLUMNS), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -0.3)), 0.85)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"star_layout\"].small_s1], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](140, COLUMNS), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -0.3)), 0.8)\n        , 350, 250\n    ),\n    new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterAllocator\"](\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"AllocatorCharacterArray\"]()\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"pit_layout\"].large], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](223, COLUMNS), FLOOR_VELOCITY), 0.97)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"pit_layout\"].up], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](227, COLUMNS), FLOOR_VELOCITY), 0.90)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"pit_layout\"].down], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](230, COLUMNS), FLOOR_VELOCITY), 0.85)\n        , 100, 50\n    )\n];\n\nlet harmfull_character_allocator = [\n    new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterAllocator\"](\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"AllocatorCharacterArray\"]()\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cactus_layout\"].small_d1], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](201, COLUMNS), FLOOR_VELOCITY), 0.8)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cactus_layout\"].small_s1], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](201, COLUMNS), FLOOR_VELOCITY), 0.7)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cactus_layout\"].small_s2], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](201, COLUMNS), FLOOR_VELOCITY), 0.6)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cactus_layout\"].medium_d1], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](193, COLUMNS), FLOOR_VELOCITY), 0.5)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cactus_layout\"].medium_s1], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](193, COLUMNS), FLOOR_VELOCITY), 0.4)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"]([_layouts__WEBPACK_IMPORTED_MODULE_1__[\"cactus_layout\"].medium_s2], 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](193, COLUMNS), FLOOR_VELOCITY), 0.3)\n\n        , CACTUS_MIN_GAP, 100\n    ),\n    new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterAllocator\"](\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"AllocatorCharacterArray\"]()\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"](_layouts__WEBPACK_IMPORTED_MODULE_1__[\"bird_layout\"].fly, 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](170, COLUMNS), FLOOR_VELOCITY.clone().add(new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -1))), 0.98)\n            .add_character(new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"](_layouts__WEBPACK_IMPORTED_MODULE_1__[\"bird_layout\"].fly, 0, new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"](190, COLUMNS), FLOOR_VELOCITY.clone().add(new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, -1))), 0.9)\n        , 500, 50\n    )\n]\n\nconst SPEED_STEP = -1;\n\nfunction get_game_level(score) {\n    if (score >= 400) {\n        return 5;\n    } else if (score >= 300) {\n        return 4;\n    } else if (score >= 200) {\n        return 3;\n    } else if (score >= 100) {\n        return 2;\n    } else {\n        return 1;\n    }\n}\nasync function initialize() {\n\n    try {\n        let metadataStr = await contract.methods.tokenDataOf(wallet).call();\n        metadata = JSON.parse(metadataStr);\n    } catch (err) {\n        console.log(err);\n        $(\"#container\").html(\"<h2 class='text-danger text-center'>There was an unexpected error.<br/>Please refresh and try again.</h2>\");\n        return;\n    }\n\n\n    current_theme = _layouts__WEBPACK_IMPORTED_MODULE_1__[\"themes\"].classic;\n    //   cumulative_velocity = new Velocity(0, 0);\n    game_over = false;\n    game_score = 0;\n    game_score_step = 0;\n    game_hi_score = metadata.attributes[1].value || 0;\n    game_speed = Math.max(0, Math.floor(game_hi_score / 100)) + 1;\n    game_level = get_game_level(game_hi_score);\n    cumulative_velocity = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, SPEED_STEP * game_speed);\n\n    canvas.height = ROWS;\n    canvas.width = COLUMNS;\n\n    harmless_characters_pool = [];\n    harmfull_characters_pool = [\n        new _character__WEBPACK_IMPORTED_MODULE_0__[\"Character\"](new _character__WEBPACK_IMPORTED_MODULE_0__[\"CharacterMeta\"](_layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].run, 4, DINO_FLOOR_INITIAL_POSITION.clone(), new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, 0)))\n    ];\n\n    document.ontouchstart = () => {\n        if (upgrading) {\n            return;\n        }\n\n        if (game_over && (Date.now() - game_over) > 1000) {\n            initialize();\n            return;\n        }\n\n        if (dino_ready_to_jump) {\n            dino_ready_to_jump = false;\n            dino_current_trust = DINO_INITIAL_TRUST.clone();\n        }\n    };\n\n    document.body.onclick = () => {\n        if (game_over && !upgrading) {\n            document.ontouchstart();\n        }\n    };\n\n    document.body.onkeydown = event => {\n        // keyCode is depricated\n        if (event.keyCode === 32 || event.key === ' ') {\n            document.ontouchstart();\n        }\n    };\n\n    event_loop();\n}\n\nfunction paint_layout(character_layout, character_position) {\n    for (let j = 0; j < character_layout.length; j++) {\n        for (let k = 0; k < character_layout[j].length; k++) {\n            if (current_theme.layout[character_layout[j][k]]) {\n                if (character_layout === _layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].stand || character_layout === _layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].jump || character_layout === _layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].run[0] || character_layout === _layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].run[1] || character_layout === _layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].dead) {\n                    if (character_layout[j][k] === 2) {\n                        canvas_ctx.fillStyle = level_colors[game_level];\n\n                    } else {\n                        canvas_ctx.fillStyle = current_theme.layout[character_layout[j][k]];\n                    }\n                } else {\n                    canvas_ctx.fillStyle = current_theme.layout[character_layout[j][k]];\n                }\n                let x_pos = character_position[1] + (k * CELL_SIZE);\n                let y_pos = character_position[0] + (j * CELL_SIZE);\n\n                canvas_ctx.fillRect(x_pos, y_pos, CELL_SIZE, CELL_SIZE);\n            }\n        }\n    }\n}\n\nfunction event_loop() {\n    game_score_step += 0.15;\n\n    if (game_score_step > 1) {\n        game_score_step -= 1;\n        game_score++;\n\n        let max = Math.max(game_score, game_hi_score);\n\n        game_speed = Math.max(0, Math.floor(max / 100)) + 1;\n        game_level = get_game_level(max);\n\n\n        // increase velocity\n        cumulative_velocity = new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Velocity\"](0, SPEED_STEP * game_speed);\n\n        // if (game_score != 0 && game_score % 300 == 0) {\n        //     if (current_theme.id == 1) {\n        //         current_theme = themes.dark;\n        //     } else {\n        //         current_theme = themes.classic;\n        //     }\n        // }\n\n    }\n\n    canvas_ctx.clearRect(0, 0, canvas.width, canvas.height);\n    canvas_ctx.fillStyle = current_theme.background;\n    canvas_ctx.fillRect(0, 0, canvas.width, canvas.height);\n    canvas_ctx.beginPath();\n\n    // Road\n    for (let i = 0; i < canvas.width; i++) {\n        canvas_ctx.fillStyle = current_theme.road;\n        canvas_ctx.fillRect(0, 232, canvas.width, CELL_SIZE * 0.2);\n    }\n\n    // score card update\n    canvas_ctx.font = \"20px Arcade\";\n    canvas_ctx.fillStyle = current_theme.score_text;\n    canvas_ctx.fillText(`H I G H         ${Math.floor(game_hi_score).toString().padStart(4, '0').split('').join(\" \")}`, canvas.width - 200, 20);\n\n    // score card update\n    canvas_ctx.font = \"20px Arcade\";\n    canvas_ctx.fillStyle = current_theme.score_text;\n    canvas_ctx.fillText(`L E V E L    ${game_level.toString().split('').join(\" \")} `, canvas.width - 200, 40);\n\n    // score card update\n    canvas_ctx.font = \"20px Arcade\";\n    canvas_ctx.fillStyle = current_theme.score_text;\n    canvas_ctx.fillText(`S P E E D    ${game_speed.toString().split('').join(\" \")} `, canvas.width - 200, 60);\n\n\n    canvas_ctx.font = \"20px Arcade\";\n    canvas_ctx.fillStyle = current_theme.score_text;\n    canvas_ctx.fillText(`S C O R E     ${game_score.toString().padStart(4, '0').split('').join(\" \")}`, canvas.width - 200, 80);\n\n    // first time\n    if (is_first_time) {\n        is_first_time = false;\n        paint_layout(_layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].stand, harmfull_characters_pool[0].get_position().get());\n        game_over = Date.now();\n\n        canvas_ctx.textBaseline = 'middle';\n        canvas_ctx.textAlign = 'center';\n        canvas_ctx.font = \"25px Arcade\";\n        canvas_ctx.fillStyle = current_theme.info_text;\n        canvas_ctx.fillText(\"J     U     M     P             T     O             S     T     A     R     T\", canvas.width / 2, (canvas.height / 2) - 50);\n        return;\n    }\n\n    // characters\n    // new characters generate\n    [[harmless_character_allocator, harmless_characters_pool], [harmfull_character_allocator, harmfull_characters_pool]].forEach(character_allocator_details => {\n        for (let i = 0; i < character_allocator_details[0].length; i++) {\n            const ALLOCATOR = character_allocator_details[0][i];\n            ALLOCATOR.tick();\n            const RANDOM_CHARACTER = ALLOCATOR.get_character();\n            if (RANDOM_CHARACTER) {\n                RANDOM_CHARACTER.get_velocity().add(cumulative_velocity);\n                character_allocator_details[1].push(RANDOM_CHARACTER);\n            }\n        }\n    });\n\n\n\n    // characters display\n    [harmless_characters_pool, harmfull_characters_pool].forEach((characters_pool, index) => {\n\n        for (let i = characters_pool.length - 1; i >= 0; i--) {\n\n            // Increase velocity on each cycle\n            if ((!(index == 1 && i == 0)) && (game_score % 100 == 0)) {\n                characters_pool[i].get_velocity().add(step_velocity);\n            }\n\n            characters_pool[i].tick();\n            let CHARACTER_LAYOUT = characters_pool[i].get_layout();\n\n            // A special case for dino jump. It's leg should be in standing position while jump\n            // Yes, this can be done much better but I am lazy :-)\n            if (!dino_ready_to_jump && index == 1 && i == 0) {\n                CHARACTER_LAYOUT = _layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].stand;\n            }\n            // ******\n\n            const CHARACTER_POSITION = characters_pool[i].get_position().get();\n\n            if (CHARACTER_POSITION[1] < -150) {\n                characters_pool.splice(i, 1);\n                continue;\n            }\n\n            paint_layout(CHARACTER_LAYOUT, CHARACTER_POSITION);\n        }\n    });\n\n\n    // harmfull characters collision detection\n    let dino_character = harmfull_characters_pool[0];\n    let dino_current_position = dino_character.get_position();\n    let dino_current_layout = dino_character.get_layout();\n    for (let i = harmfull_characters_pool.length - 1; i > 0; i--) {\n        const HARMFULL_CHARACTER_POSITION = harmfull_characters_pool[i].get_position();\n        const HARMFULL_CHARACTER_LAYOUT = harmfull_characters_pool[i].get_layout();\n        if (Object(_physics__WEBPACK_IMPORTED_MODULE_2__[\"isCollided\"])(dino_current_position.get()[0], dino_current_position.get()[1], dino_current_layout.length, dino_current_layout[0].length, HARMFULL_CHARACTER_POSITION.get()[0], HARMFULL_CHARACTER_POSITION.get()[1], HARMFULL_CHARACTER_LAYOUT.length, HARMFULL_CHARACTER_LAYOUT[0].length)) {\n            canvas_ctx.textBaseline = 'middle';\n            canvas_ctx.textAlign = 'center';\n            canvas_ctx.font = \"25px Arcade\";\n            canvas_ctx.fillStyle = current_theme.info_text;\n            canvas_ctx.fillText(\"G     A     M     E             O     V     E     R\", canvas.width / 2, (canvas.height / 2) - 50);\n            paint_layout(_layouts__WEBPACK_IMPORTED_MODULE_1__[\"retry_layout\"], new _physics__WEBPACK_IMPORTED_MODULE_2__[\"Position\"]((canvas.height / 2) - _layouts__WEBPACK_IMPORTED_MODULE_1__[\"retry_layout\"].length, (canvas.width / 2) - _layouts__WEBPACK_IMPORTED_MODULE_1__[\"retry_layout\"][0].length).get());\n            paint_layout(_layouts__WEBPACK_IMPORTED_MODULE_1__[\"dino_layout\"].dead, harmfull_characters_pool[0].get_position().get());\n            game_over = Date.now();\n\n\n            if (metadata.attributes[1].value < game_score) {\n                upgrading = true;\n                $(\"#upgradeNFTModal\").off().on('hidden.bs.modal', function () {\n                    upgrading = false;\n                });\n\n                let $btn = $(\"#upgradeNFTModal\").find('[data-upgrade-btn]');\n\n                $(\"#upgradeNFTModal\").find('.text-normal').show();\n                $(\"#upgradeNFTModal\").find('.text-success').hide();\n                $(\"#upgradeNFTModal\").find('.text-danger').hide();\n                $btn.text('Upgrade now');\n\n                $btn.off().on('click', async function () {\n                    // $(\"#minting\").html('Minting...');\n                    $(\"#upgradeNFTModal\").find('button').prop('disabled', true);\n                    $(this).text('Upgrading...');\n\n                    $(\"#upgradeNFTModal\").find('.text-danger').hide();\n\n                    try {\n\n                        let attrs = [];\n                        attrs[0] = [0, String(game_level)];\n                        attrs[1] = [1, String(game_level)];\n                        attrs[2] = [2, String(game_score)];\n                        attrs[3] = [3, String(game_level)];\n                        attrs[4] = [4, String(game_speed)];\n                        await contract.methods.updateAttributes(attrs).send({ from: wallet });\n\n                        $(\"#upgradeNFTModal\").find('.text-normal').hide();\n                        $(\"#upgradeNFTModal\").find('.text-success').show();\n                        $(this).text('Close');\n                        $(this).off().on('click', function () {\n                            $(\"#upgradeNFTModal\").modal(\"hide\");\n                        });\n\n                    }\n                    catch (err) {\n                        console.log(err);\n                        $(this).text('Upgrade now');\n                        if (err.code === 4001 || String(err).indexOf(\"User denied transaction signature.\") >= 0) {\n                            return;\n                        }\n                        $(\"#upgradeNFTModal\").find('.text-danger').show();\n                    }\n                    finally {\n                        $(\"#upgradeNFTModal\").find('button').prop('disabled', false);\n                    }\n                });\n                $(\"#upgradeNFTModal\").modal(\"show\");\n            }\n\n            return;\n        }\n    }\n\n    // dino jump case\n    dino_character.set_position(Object(_physics__WEBPACK_IMPORTED_MODULE_2__[\"applyVelocityToPosition\"])(dino_character.get_position(), dino_current_trust));\n\n    if (dino_character.get_position().get()[0] > DINO_FLOOR_INITIAL_POSITION.get()[0]) {\n        dino_character.set_position(DINO_FLOOR_INITIAL_POSITION.clone());\n        dino_ready_to_jump = true;\n    }\n\n    dino_current_trust.sub(ENVIRONMENT_GRAVITY);\n\n    requestAnimationFrame(event_loop);\n}\n\nasync function main() {\n    if (window.ethereum) {\n\n        // targets Rinkeby chain, id 4\n        const targetNetworkId = '0xaa36a7';\n\n        const checkNetwork = async () => {\n            const currentChainId = await window.ethereum.request({\n                method: 'eth_chainId',\n            });\n\n            // return true if network id is the same\n            if (currentChainId == targetNetworkId) return true;\n            // return false is network id is different\n            return false;\n        };\n\n        // switches network to the one provided\n        const switchNetwork = async () => {\n            await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: targetNetworkId }],\n            });\n            // refresh\n            window.location.reload();\n        };\n\n        if (!await checkNetwork()) {\n            await switchNetwork();\n        } else {\n            try {\n                let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                web3 = new Web3(window.ethereum);\n\n                $(\"#wallet\").html(\"Wallet: \" + accounts[0].substring(0, 6) + \"...\" + accounts[0].substring(accounts[0].length - 6));\n                wallet = accounts[0];\n\n            } catch (err) {\n                $(\"#container\").html(\"<h1>Please connect your wallet!</h1>\");\n                return;\n            }\n\n\n            async function start() {\n\n                $(\"#container\").show();\n                initialize();\n            }\n\n            try {\n                contract = new web3.eth.Contract(abi, '0xd9698547Ba45Aa6e8dB4f56900D50B40C6C08089');\n                let nfts = await contract.methods.balanceOf(wallet).call();\n                if (nfts === 0n) {\n                    $(\"#minting\").html(\"You don't have a dino NFT.<br/> <button class='btn btn-primary mt-2' href='javascript:void(0)'>Click here</a> to mint one\").show();\n                    $(\"#minting\").find('button').off().on('click', async function () {\n                        $(\"#minting\").html('Minting...');\n\n                        try {\n                            await contract.methods.mint().send({ from: wallet });\n                            start();\n                        } catch (err) {\n                            console.log(err);\n                            if (err.code === 4001 || String(err).indexOf(\"User denied transaction signature.\") >= 0) {\n                                $(\"#container\").html(\"<h2 class='text-danger text-center'>You need a dino NFT to play this game.<br/>Please refresh and try again.</h2>\");\n                            } else {\n                                $(\"#container\").html(\"<h2 class='text-danger text-center'>There was an unexpected error.<br/>Please refresh and try again.</h2>\");\n                            }\n                        } finally {\n                            $(\"#minting\").hide();\n                            $(\"#container\").show();\n                        }\n                    });\n                } else {\n                    start();\n                }\n\n            } catch (err) {\n                console.log(err);\n                $(\"#container\").html(\"<h1 class='text-danger text-center'>There was an unexpected error.<br/>Please refresh and try again.</h1>\");\n            }\n\n        }\n\n\n    } else {\n        document.getElementById(\"container\").innerHTML = \"<h1>Please install Metamask!</h1>\";\n    }\n\n\n}\n\n$(document).ready(function () {\n    document.fonts.load('1rem \"Arcade\"').then(() => {\n        main();\n    });\n});\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./layouts.js":
/*!********************!*\
  !*** ./layouts.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const STAR_SMALL_S1 = [\n    [0, 0, 0, 0, 5, 0, 0, 0, 0],\n    [0, 0, 5, 0, 5, 0, 5, 0, 0],\n    [0, 5, 0, 0, 5, 0, 0, 5, 0],\n    [0, 0, 0, 5, 5, 5, 0, 0, 0],\n    [5, 5, 5, 5, 5, 5, 5, 5, 5],\n    [0, 0, 0, 5, 5, 5, 0, 0, 0],\n    [0, 5, 0, 0, 5, 0, 0, 5, 0],\n    [0, 0, 5, 0, 5, 0, 5, 0, 0],\n    [0, 0, 0, 0, 5, 0, 0, 0, 0],\n];\nconst STAR_SMALL_S2 = [\n    [0, 0, 0, 5, 0, 0, 0],\n    [0, 0, 0, 5, 0, 0, 0],\n    [0, 0, 5, 5, 5, 0, 0],\n    [5, 5, 5, 5, 5, 5, 5],\n    [0, 0, 5, 5, 5, 0, 0],\n    [0, 0, 0, 5, 0, 0, 0],\n    [0, 0, 0, 5, 0, 0, 0],\n];\n\nconst DINO_STAND = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1],\n    [1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0],\n    [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0]\n];\nconst DINO_DEAD = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1],\n    [1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0],\n    [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0]\n];\nconst DINO_LEFT_LEG_UP = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1],\n    [1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0],\n    [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n];\nconst DINO_RIGHT_LEG_UP = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1],\n    [1, 1, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0],\n    [2, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0],\n    [2, 1, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0],\n    [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0],\n    [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 1, 2, 2, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0]\n];\nconst CLOUD = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0],\n    [0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0],\n    [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3],\n    [0, 3, 3, 0, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],\n    [3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\n];\n\nconst PIT_LARGE = [\n    [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1]\n];\nconst PIT_UP = [\n    [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1],\n    [2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2],\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]\n];\nconst PIT_DOWN = [\n    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n    [2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],\n    [1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1]\n];\n\nconst BIRD_WING_UP = [\n    [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0],\n    [0, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0],\n    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0]\n];\nconst BIRD_WING_DOWN = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n];\n\nconst CACTUS_SMALL_S1 = [\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1],\n    [1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0],\n    [1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0]\n];\nconst CACTUS_SMALL_S2 = [\n    [1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 0, 0],\n    [1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [0, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0]\n];\nCACTUS_SMALL_D1 = [\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0]\n];\n\nconst CACTUS_MEDIUM_S1 = [\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1],\n    [1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0],\n    [1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0]\n];\nconst CACTUS_MEDIUM_S2 = [\n    [1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 0, 0],\n    [1, 2, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],\n    [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0]\n];\nconst CACTUS_MEDIUM_D1 = [\n    [0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1],\n    [1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],\n    [1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 2, 2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 1, 2, 2, 1, 2, 2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0],\n    [0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0]\n];\n\nconst ROAD = [[2, 2, 2]];\n\nconst STONE_LARGE = [[2, 2, 2, 2]];\nconst STONE_MEDIUM = [[2, 2]];\nconst STONE_SMALL = [[2]];\n\nconst RETRY = [\n    [1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1],\n    [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1],\n    [1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\n    [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1],\n];\n\nmodule.exports = {\n    dino_layout: {\n        stand: DINO_STAND,\n        dead: DINO_DEAD,\n        run: [\n            DINO_LEFT_LEG_UP, DINO_RIGHT_LEG_UP\n        ],\n        jump: DINO_STAND\n    },\n    road_layout: ROAD,\n    cloud_layout: CLOUD,\n    stone_layout: {\n        large: STONE_LARGE,\n        medium: STONE_MEDIUM,\n        small: STONE_SMALL\n    },\n    pit_layout: {\n        large: PIT_LARGE,\n        up: PIT_UP,\n        down: PIT_DOWN\n    },\n    bird_layout: {\n        fly: [BIRD_WING_UP, BIRD_WING_UP, BIRD_WING_UP, BIRD_WING_UP, BIRD_WING_UP, BIRD_WING_UP, BIRD_WING_UP, BIRD_WING_DOWN, BIRD_WING_DOWN, BIRD_WING_DOWN, BIRD_WING_DOWN, BIRD_WING_DOWN, BIRD_WING_DOWN, BIRD_WING_DOWN]\n    },\n    cactus_layout: {\n        small_s1: CACTUS_SMALL_S1,\n        small_s2: CACTUS_SMALL_S2,\n        small_d1: CACTUS_SMALL_D1,\n        medium_s1: CACTUS_MEDIUM_S1,\n        medium_s2: CACTUS_MEDIUM_S2,\n        medium_d1: CACTUS_MEDIUM_D1\n    },\n    star_layout: {\n        small_s1: STAR_SMALL_S1,\n        small_s2: STAR_SMALL_S2\n    },\n    retry_layout: RETRY,\n    themes: {\n        classic: {\n            id: 1,\n            background: \"#ffffff\",\n            road: \"#535353\",\n            score_text: \"#747474\",\n            info_text: \"#535353\",\n            layout: [false, \"#ffffff\", \"#535353\", \"#dadada\", \"#535353\", false]\n        },\n        dark: {\n            id: 2,\n            background: \"#202225\",\n            road: \"#acacac\",\n            score_text: \"#909191\",\n            info_text: \"#acacac\",\n            layout: [false, \"#202225\", \"#acacac\", \"#3e3f3f\", \"#acacac\", \"#3e3f3f\"]\n        }\n    }\n}\n\n//# sourceURL=webpack:///./layouts.js?");

/***/ }),

/***/ "./physics.js":
/*!********************!*\
  !*** ./physics.js ***!
  \********************/
/*! exports provided: Position, Velocity, applyVelocityToPosition, isCollided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Velocity\", function() { return Velocity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyVelocityToPosition\", function() { return applyVelocityToPosition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCollided\", function() { return isCollided; });\nclass Position {\n    constructor(y_pos, x_pos) {\n        this._y_pos = y_pos;\n        this._x_pos = x_pos;\n    }\n\n    get() {\n        return [this._y_pos, this._x_pos];\n    }\n\n    clone() {\n        return new Position(this._y_pos, this._x_pos);\n    }\n}\n\nclass Velocity {\n    constructor(y_speed, x_speed) {\n        this._y_speed = y_speed;\n        this._x_speed = x_speed;\n    }\n\n    get() {\n        return [this._y_speed, this._x_speed];\n    }\n\n    sub(target_velocity) {\n        this._y_speed -= target_velocity._y_speed;\n        this._x_speed -= target_velocity._x_speed;\n        return this;\n    }\n\n    add(target_velocity) {\n        this._y_speed += target_velocity._y_speed;\n        this._x_speed += target_velocity._x_speed;\n        return this;\n    }\n\n    clone() {\n        return new Velocity(this._y_speed, this._x_speed);\n    }\n}\n\nfunction applyVelocityToPosition(position, velocity) {\n    return new Position(position._y_pos + velocity._y_speed, position._x_pos + velocity._x_speed);\n}\n\n\nfunction isCollided(target1_y_pos, target1_x_pos, target1_height, target1_width, target2_y_pos, target2_x_pos, target2_height, target2_width) {\n    let target1_top = target1_y_pos;\n    let target1_bottom = target1_top + target1_height;\n    let target1_left = target1_x_pos;\n    let target1_right = target1_left + target1_width;\n\n    let target2_top = target2_y_pos;\n    let target2_bottom = target2_top + target2_height;\n    let target2_left = target2_x_pos;\n    let target2_right = target2_left + target2_width;\n\n\n    return (target1_top < target2_bottom) && (target1_bottom > target2_top) && (target1_right > target2_left) && (target1_left < target2_right);\n}\n\n//# sourceURL=webpack:///./physics.js?");

/***/ })

}]);